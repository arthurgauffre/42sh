name: chocolatine-run
on:
  push:
    branches-ignore: [ga-ignore-*]
  pull_request:
    branches-ignore: [ga-ignore-*]
env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-PSU-200-BDX-2-1-42sh-arthur.gauffre.git"
  EXECUTABLES: "42sh"
jobs:
  check_coding_style:
    name: Coding style checker
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3

      - name: Check coding style
        run: check.sh $(pwd) $(pwd)

      - name: Check result
        run: |
          IFS=$'\n'
          set -f
          CONTENT="$(cat $(pwd)/coding-style-reports.log)"
          NB_ERRORS=$(cat $(pwd)/coding-style-reports.log | wc -l)
          if [ $NB_ERRORS -gt 0 ]; then
            for line in $CONTENT; do
              echo "new line: $line"
              IFS=': '
              arr=($line)
              IFS=$'\n'
              echo "::error file=${arr[0]},line=${arr[1]},title="${arr[2]} Coding style error"::${arr[3]}"
            done
            exit 1
          fi
          echo "::notice name=Coding-style::OK"
          echo 0
  check_program_compilation:
    name: Check compilation
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@v3

      - name: Compile
        timeout-minutes: 2
        run: make

      - name: Check result
        run: |
          IFS=','
          IS_MISSING=0
          for executable in $EXECUTABLES; do
            if [ ! -f $executable ]; then
              echo "::error file=$executable,name="Compilation Failed"::Binary not found"
              IS_MISSING=1
            fi
          done
          if [ $IS_MISSING -eq 1 ]; then
            exit 1
          fi
          echo "::notice name=Compilation::OK"
          exit 0
  push_to_mirror:
    name: Pushing refs to mirror
    runs-on: ubuntu-latest
    needs: [check_program_compilation]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout GH repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1.1.1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.MIRROR_SSH_KEY }}
